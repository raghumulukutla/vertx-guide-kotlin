import kotlin.reflect.jvm.internal.impl.descriptors.annotations.KotlinTarget

plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.20'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
}


group = 'com.raghu.vertx3guide'
version = '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
  jcenter()
}

ext {
  kotlinVersion = '1.3.20'
  vertxVersion = '3.6.3'
  junitJupiterEngineVersion = '5.4.0'
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}


def step1mainVerticleName = 'com.raghu.vertx3guide.wiki.step1.MainVerticle'
def step2mainVerticleName = 'com.raghu.vertx3guide.wiki.step2.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-mysql-postgresql-client:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
  // https://mvnrepository.com/artifact/io.vertx/vertx-stack-depchain



  // https://mvnrepository.com/artifact/io.vertx/vertx-web-templ-freemarker
  implementation "io.vertx:vertx-web-templ-freemarker:$vertxVersion"


  // https://mvnrepository.com/artifact/com.github.rjeschke/txtmark
  implementation group: 'com.github.rjeschke', name: 'txtmark', version: '0.13'








  // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
  implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.26'

  // https://mvnrepository.com/artifact/org.freemarker/freemarker
//  implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.14'
  // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
//  implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'





  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.20"
}

compileKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '1.8'
}


shadowJar {
  classifier = 'fat'
  manifest {
    if(project.hasProperty("step1")) {
      attributes 'Main-Verticle': step1mainVerticleName
    }
    else if(project.hasProperty("step2")) {
      attributes 'Main-Verticle': step2mainVerticleName
    }
    else {
      println "Unknown Property"
    }


  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  if(project.hasProperty("step1")) {
    args = ['run', step1mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
  }
  else if(project.hasProperty("step2")) {
    args = ['run', step2mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
  }
  else {
    println "Unknown Property"
  }
  
  


}



//
//
//task.resgister("step1") {
//  group = 'Application'
//  description = 'Runs step 1'
//  doLast{
//    println 'Hello from alpha'
//  }
//
//}
//
//// some condition
//if (project.hasProperty("doBeta")) {
//  step1.finalizedBy run
//}





